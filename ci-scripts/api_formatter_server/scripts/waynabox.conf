server {
       listen 80;
       server_name www.waynabox.com;
       return 301 $scheme://waynabox.com$request_uri;
}
server {
       listen 80;
       server_name www.waynabox.fr waynabox.fr;
       return 301 $scheme://waynabox.com/fr/;
}
server {
       listen 80;
       server_name www.waynabox.pt waynabox.pt;
       return 301 $scheme://waynabox.com/pt/;
}


server {
    listen 80;
    server_name {front_machine_url};
    root /var/www/current/web;

    index {index_app};

    location / {
        # try to serve file directly, fallback to app.php
        try_files $uri /{index_app}$is_args$args;
    }

    location ~ ^/en$ {
        return 301 $scheme://waynabox.com/es/;
    }

    location ~ ^/en/$ {
        return 301 $scheme://waynabox.com/es/;
    }

    # DEV
    # This rule should only be placed on your development environment
    # In production, don't include this and don't deploy app_dev.php or config.php
    location ~ ^/({index_app})(/|$) {
        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS off;
    }
    # PROD
    location ~ ^/app\.php(/|$) {

        fastcgi_read_timeout 700;

        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS off;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
}

